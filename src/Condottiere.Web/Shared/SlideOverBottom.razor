<div class="@(show ? "" : "translate-y-full")  z-40 pointer-events-none fixed inset-x-0 bottom-0 flex max-w-full transform transition ease-in-out duration-500 sm:duration-700">
    <div class="pointer-events-auto w-screen border-t">
        <div class="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">

            <div class="flex-1 overflow-y-auto py-6 max-w-3xl mx-auto p-4 md:p-8">

                <div class="flex items-start justify-between">
                    <h2 class="text-lg font-medium text-gray-900" id="slide-over-title">
                        @Header
                    </h2>
                    <div class="ml-3 flex h-7 items-center">
                        <button type="button" @onclick="Close"
                                class="-m-2 p-2 text-gray-400 hover:text-gray-500">
                            <span class="sr-only">Cerrar panel</span>

                            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                 stroke-width="2" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="my-3 text-gray-700">
                    @ChildContent
                </div>

                @if(ShowButtons)
                {
                    <div class="border-t border-gray-200 py-6">
                    
                        <div class="flex items-center justify-between space-x-4">
                            <button type="button" @onclick="Accept"
                                    class="@Styles.PrimaryButton">

                                <svg xmlns="http://www.w3.org/2000/svg" class="@Styles.DefaultIcon" viewBox="0 0 24 24" stroke-width="3" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                    <path d="M5 12l5 5l10 -10" />
                                </svg>

                                <span class="ml-2"> @AcceptText </span>

                            </button>

                            <button type="button" @onclick="Close"
                                    class="@Styles.SecondaryButton">

                                <span class="ml-2"> @CancelText </span>

                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private bool show = false;

    [Parameter]
    public string Header { get; set; } = "Slide Over";

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public EventCallback OnAccepted { get; set; }

    [Parameter]
    public string AcceptText { get; set; } = "OK";

    [Parameter]
    public string CancelText { get; set; } = "Cancel";

    [Parameter]
    public bool ShowButtons { get; set; } = true;

    public void Open()
    {
        this.show = true;
        StateHasChanged();
    }

    public void Close()
    {
        show = false;
        StateHasChanged();
    }

    private async Task Accept()
    {
        await OnAccepted.InvokeAsync();
    }
}
