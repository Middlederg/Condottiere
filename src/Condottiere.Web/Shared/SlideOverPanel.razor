<div class="@(show ? "" : "translate-x-full") z-50 pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10 transform transition ease-in-out duration-500 sm:duration-700">
    <div class="pointer-events-auto w-screen max-w-xl">
        <div class="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">
            <div class="flex-1 overflow-y-auto py-6 px-4 sm:px-6">
                
                <div class="flex items-start justify-between">
                    <h2 class="text-lg font-medium text-gray-900" id="slide-over-title">
                        @Header
                    </h2>
                    <div class="ml-3 flex h-7 items-center">
                        <button type="button" @onclick="Close"
                                class="-m-2 p-2 text-gray-400 hover:text-gray-500">
                            <span class="sr-only">Cerrar panel</span>
                            <!-- Heroicon name: outline/x -->
                            <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                                 stroke-width="2" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                </div>

                <div class="mt-3 text-gray-700">
                    @MainContent
                </div>
            </div>

            <div class="border-t border-gray-200 py-6 px-4 sm:px-6">
               @Footer
            </div>
        </div>
    </div>
</div>

@code {
    private bool show = false;
    private bool closeAllowed = true;

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public RenderFragment MainContent { get; set; }

    [Parameter]
    public RenderFragment Footer { get; set; }

    public void Toggle(bool value, bool closeAllowed = true)
    {
        show = value;
        this.closeAllowed = closeAllowed;
        StateHasChanged();
    }

    private void Close()
    {
        if (closeAllowed)
        {
            show = true;
            StateHasChanged();
        }
    }
}
